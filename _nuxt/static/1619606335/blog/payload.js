__NUXT_JSONP__("/blog", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad){return {data:[{posts:[{slug:"2-incredible-tools",title:"Incredible tools",date:"2020-03-23T20:47:18.000Z",toc:[{id:F,depth:l,text:G}],body:{type:u,children:[{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fexplainshell.com\u002F",rel:[g,h,i],target:j},children:[{type:a,value:"explainshell"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fosawards.com\u002Fjavascript\u002F2020",rel:[g,h,i],target:j},children:[{type:a,value:"osawards"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"vue-libs:"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fgithub.com\u002FAkryum\u002Fvue-virtual-scroller",rel:[g,h,i],target:j},children:[{type:a,value:"vue-virtual-scroller"}]}]},{type:a,value:c},{type:b,tag:m,props:{id:F},children:[{type:b,tag:e,props:{href:"#programs",ariaHidden:n,tabIndex:o},children:[{type:b,tag:p,props:{className:[q,r]},children:[]}]},{type:a,value:G}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Ftableplus.com\u002F",rel:[g,h,i],target:j},children:[{type:a,value:"tableplus"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Modern, native, and friendly GUI tool for relational databases: MySQL, PostgreSQL, SQLite & more"}]}]},dir:v,path:"\u002Fblog\u002F2-incredible-tools",extension:w,createdAt:H,updatedAt:H},{slug:"5-cool-functions",title:"Cool, maybe useful functions",date:"2021-03-20T21:50:21.000Z",toc:[],body:{type:u,children:[{type:b,tag:d,props:{},children:[{type:a,value:"####From libraries:"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fdate-fns.org\u002F",rel:[g,h,i],target:j},children:[{type:a,value:"date-fns"}]},{type:a,value:":"}]},{type:a,value:c},{type:b,tag:t,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fdate-fns.org\u002Fv2.19.0\u002Fdocs\u002FformatRelative",rel:[g,h,i],target:j},children:[{type:a,value:"formatRelative"}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:z,props:{className:[A]},children:[{type:b,tag:B,props:{className:[C,D]},children:[{type:b,tag:y,props:{},children:[{type:a,value:"formatRelative(subDays(new Date(), 3), new Date())\n\u002F\u002F=\u003E \"last Friday at 7:26 p.m.\"\n"}]}]}]},{type:a,value:"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{type:b,tag:"table",props:{},children:[{type:b,tag:"thead",props:{},children:[{type:b,tag:s,props:{},children:[{type:b,tag:I,props:{},children:[{type:a,value:"Distance to the base date"}]},{type:b,tag:I,props:{},children:[{type:a,value:"Result"}]}]}]},{type:b,tag:"tbody",props:{},children:[{type:b,tag:s,props:{},children:[{type:b,tag:k,props:{},children:[{type:a,value:"Previous 6 days"}]},{type:b,tag:k,props:{},children:[{type:a,value:"last Sunday at 04:30 AM"}]}]},{type:b,tag:s,props:{},children:[{type:b,tag:k,props:{},children:[{type:a,value:"Last day"}]},{type:b,tag:k,props:{},children:[{type:a,value:"yesterday at 04:30 AM"}]}]},{type:b,tag:s,props:{},children:[{type:b,tag:k,props:{},children:[{type:a,value:"Same day"}]},{type:b,tag:k,props:{},children:[{type:a,value:"today at 04:30 AM"}]}]},{type:b,tag:s,props:{},children:[{type:b,tag:k,props:{},children:[{type:a,value:"Next day"}]},{type:b,tag:k,props:{},children:[{type:a,value:"tomorrow at 04:30 AM"}]}]},{type:b,tag:s,props:{},children:[{type:b,tag:k,props:{},children:[{type:a,value:"Next 6 days"}]},{type:b,tag:k,props:{},children:[{type:a,value:"Sunday at 04:30 AM"}]}]},{type:b,tag:s,props:{},children:[{type:b,tag:k,props:{},children:[{type:a,value:"Other"}]},{type:b,tag:k,props:{},children:[{type:a,value:"12\u002F31\u002F2017"}]}]}]}]}]},dir:v,path:"\u002Fblog\u002F5-cool-functions",extension:w,createdAt:"2021-03-20T10:12:16.502Z",updatedAt:"2021-03-20T10:19:22.448Z"},{slug:"4-react-query",title:"React-query - biblioteka do zarządzanie danymi z API",date:"2021-04-18T21:50:21.000Z",toc:[{id:J,depth:l,text:K},{id:L,depth:l,text:M},{id:N,depth:l,text:O},{id:P,depth:l,text:Q},{id:R,depth:l,text:S}],body:{type:u,children:[{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Feasyontheweb.com\u002Fwhat-is-react-query-and-how-to-use-it\u002F",rel:[g,h,i],target:j},children:[{type:a,value:"Źródło artykułu"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    W tym artykule przyjrzymy się niesamowitej bibliotece o nazwie React-query i zobaczymy, czym jest react-query, dlaczego powinniśmy go używać w naszych aplikacjach React i oczywiście jak możemy go używać w naszych aplikacjach."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Pobieranie danych asynchronicznie i utrzymywanie ich w aplikacji React jest jedną z najbardziej frustrujących rzeczy do zrobienia, nawet jeśli na początku nie jest to trudne - sprawy komplikują się naprawdę szybko z pobieraniem danych i utrzymywaniem stanu pobranych danych."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Osobiście używałem Reduxa jako magazynu pamięci podręcznej dla pobieranych danych wcześniej i naprawdę nie było to przyjemne doświadczenie. React-query w tym sensie jest absolutnym ratunkiem, tak jak jego rodzeństwo react-table."}]},{type:a,value:c},{type:b,tag:m,props:{id:J},children:[{type:b,tag:e,props:{href:"#zalety-u%C5%BCywania-react-query",ariaHidden:n,tabIndex:o},children:[{type:b,tag:p,props:{className:[q,r]},children:[]}]},{type:a,value:K}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Nie lubię pisać dużo blogów o poszczególnych bibliotekach, ale react-query szybko stał się jednym z moich ulubionych bibliotek wszech czasów i dlatego chciałbym podkreślić zalety react-query już na początku artykułu, abyście razem ze mną wsiedli do tego hype'owego pociągu."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Niektóre z zalet react-query to :"}]},{type:a,value:c},{type:b,tag:t,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Automatyczne buforowanie danych"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Automatyczne ponowne pobieranie świeżych danych po akcjach użytkownika"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Super czysta składnia"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Prefetching"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Używanie zbuforowanych danych"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Domyślne zarządzanie ładowaniem, stanem powodzenia i błędami"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Nieskończone zapytania"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Szczerze mówiąc, ta lista mogłaby się ciągnąć w nieskończoność i nie jest to nawet w zakresie tego artykułu, aby omówić każdy z tych punktów. Nie jest to również celem tego artykułu, celem jest uświadomienie Ci korzyści i dać Ci wgląd w możliwości, jakie daje nam react-query."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Aby zagłębić się i sprawdzić wszystko co daje react-query zawsze możesz zajrzeć do dokumentacji."}]},{type:a,value:c},{type:b,tag:m,props:{id:L},children:[{type:b,tag:e,props:{href:"#mniej-kodu",ariaHidden:n,tabIndex:o},children:[{type:b,tag:p,props:{className:[q,r]},children:[]}]},{type:a,value:M}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:x,props:{alt:"kod",src:"https:\u002F\u002Fi2.wp.com\u002Feasyontheweb.com\u002Fwp-content\u002Fuploads\u002F2021\u002F01\u002Fcarbon-2021-01-12T170936.493.png?w=757&ssl=1"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Jeśli  kiedykolwiek zdarzyło Ci się pisać kod taki jak ten, lub kod podobny do tego wewnątrz hooka (tak, wszyscy mądrzy), to react-query jest narzędziem dla Ciebie. Osobiście, nienawidzę używać stanów ładowania i błędów wszędzie - nawet jeśli napiszesz custom hooki, aby to zrobić, react-query oferuje o wiele więcej."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:x,props:{alt:"przykład react-query",src:"https:\u002F\u002Fi0.wp.com\u002Feasyontheweb.com\u002Fwp-content\u002Fuploads\u002F2021\u002F01\u002Fcarbon-2021-01-12T171357.638.png?w=749&ssl=1"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    To jest refaktoryzowany kod wykorzystujący useQuery z react-query. Jedną z rzeczy, którą zauważysz bezpośrednio jest to, jak react-query zwraca isLoading, błąd i dane . Były to rzeczy, którymi musieliśmy zarządzać sami w pierwszej wersji kodu."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Wszystko co musisz zrobić to zaimportować hook useQuery z react-query i przekazać do niego trzy argumenty - unikalny klucz dla zapytania, funkcję, która jest faktycznym zapytaniem oraz opcjonalny obiekt config, który omówimy później."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    W ten sposób, react query zmniejsza całą masę kodu. A jeśli chodzi o kod, to im mniejsza powierzchnia kodu, tym mniejsze szanse na błędy."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Teraz, jeśli wyodrębnisz to również do hooka, voila! Jeszcze bardziej zmniejszyłeś swój kod. Ale zostawię to wam..."}]},{type:a,value:c},{type:b,tag:m,props:{id:N},children:[{type:b,tag:e,props:{href:"#dane-w-pami%C4%99ci-podr%C4%99cznej",ariaHidden:n,tabIndex:o},children:[{type:b,tag:p,props:{className:[q,r]},children:[]}]},{type:a,value:O}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Jedną z największych zalet react-query jest mechanizm cache'owania i synchronizacji danych. Dzięki opcjom takim jak initialData, staleTime, cacheTime itd. jest to tak proste i wspaniałe do pracy"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Pomyślmy o tym, co normalnie dzieje się w aplikacji React, przechowywałbyś dane, które chcesz buforować w Reduxie lub jakimkolwiek innym globalnym mechanizmie zarządzania stanem, którego używasz, a za każdym razem, gdy wchodzisz do komponentu, najprawdopodobniej masz useEffect, w którym pobierasz nowe dane (lub nie, w oparciu o porównanie z danymi z pamięci podręcznej) i ponownie przechowujesz nowo pobrane dane w swoim globalnym stanie."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Jest to gorączkowe, zabugowane i nie daje zbyt wielu opcji (chyba, że sam je napiszesz, co znowu zwiększa powierzchnię kodu)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Z react-query, wszystko to staje się proste. Wykorzystuje on koncepcję czegoś, co nazywa się stale danymi. Jeśli react-query widzi, że dane są stale, próbuje pobrać nowsze dane. Domyślnie czas stale wynosi 0, czyli dane stają się stale zaraz po ich pobraniu."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Pierwszą opcją, którą należy rozważyć jest czas stale, dłuższy czas stale, dłużej react-query będzie czekać zanim uzna zbuforowane dane za stale i spróbuje pobrać nowe dane."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Warto zauważyć, że react-query nie implementuje pollingu w żadnym sensie, zamiast tego używa aktywności użytkownika do wyzwalania następnej synchronizacji nieaktualnych danych."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Stałe zapytania są refetched automatycznie w tle, gdy:"}]},{type:a,value:c},{type:b,tag:t,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Montowane są nowe instancje zapytania"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Okno zostanie przeorientowane"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Sieć jest ponownie podłączona."}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Opcjonalnie zapytanie może być skonfigurowane z interwałem refaktoryzacji."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Wszystko to jest konfigurowalne poprzez użycie refetchOnMount, refetchOnWindowFocus, refetchOnReconnect i refetchInterval."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Jeśli nie chcesz ciągle nasłuchiwać na aktywności użytkownika wymienione powyżej, możesz zwiększyć staleTime dla zapytania."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Jak odbywa się buforowanie danych? Buforowanie danych jest oparte na kombinacji klucz + funkcja zapytania, której używasz wewnątrz useQuery. Każda unikalna kombinacja jest używana do buforowania konkretnych danych."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Co więcej, nigdy nie będziesz musiał widzieć \"ładowania\" na ekranie, jeśli zapytanie zostało już raz uruchomione. Po tym, zbuforowane dane pojawią się na ekranie początkowo i zostaną zaktualizowane po zakończeniu synchronizacji. Zgrabne, prawda?"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Aby zrozumieć kompletny cykl życia buforowania, gorąco polecam zapoznać się z Przykładami Buforowania."}]},{type:a,value:c},{type:b,tag:m,props:{id:P},children:[{type:b,tag:e,props:{href:"#paginowane-zapytania",ariaHidden:n,tabIndex:o},children:[{type:b,tag:p,props:{className:[q,r]},children:[]}]},{type:a,value:Q}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:x,props:{alt:"koda do paginacji",src:"https:\u002F\u002Fi0.wp.com\u002Feasyontheweb.com\u002Fwp-content\u002Fuploads\u002F2021\u002F01\u002Fcarbon-2021-01-13T193333.872.png?w=715&ssl=1"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Jak myślisz, co się stanie, kiedy mamy ten kawałek kodu i zmienimy numer strony? Niestety, to co się dzieje to fakt, że użytkownik widzi \"ładowanie\", tzn. zapytanie przechodzi w stan ładowania, a następnie w stan sukcesu przy każdej zmianie strony."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Dzieje się tak, ponieważ kombinacja klucz + queryFunction zmieniła się wraz ze zmianą numeru strony. Dlatego też react-query nie jest w stanie korzystać z buforowanych danych. Cóż, nawet bez react-query 99% aplikacji działa w ten sposób."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Z react-query masz jednak świetną opcję o nazwie keepPreviousData. Kiedy ta opcja jest ustawiona na true w obiekcie konfiguracyjnym, dane z poprzedniego zapytania są dostępne nawet kiedy zapytanie się zmienia i dane są zamieniane z nowymi danymi jak tylko nowe dane nadejdą. Jest to lepsze doświadczenie użytkownika, ponieważ nie musi on oglądać komunikatu o ładowaniu raz po raz."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Aby dowiedzieć się więcej na temat zapytań paginowanych sprawdź to -\u003E Zapytania paginowane."}]},{type:a,value:c},{type:b,tag:m,props:{id:R},children:[{type:b,tag:e,props:{href:"#mutacje",ariaHidden:n,tabIndex:o},children:[{type:b,tag:p,props:{className:[q,r]},children:[]}]},{type:a,value:S}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    useQuery jest hookiem, którego używaliśmy do tej pory, useQuery jest jednak używany tylko dla zapytań GET. Co z zapytaniami aktualizującymi takimi jak PUT\u002FDELETE\u002FPOST? Co react-query ma dla nas podczas pracy z tymi zapytaniami?"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Tak jak hook useQuery, react-query dostarcza nam kolejny fajny hook o nazwie useMutation.\n"},{type:b,tag:x,props:{alt:"Oficjalny przykład useMutation z docs",src:"https:\u002F\u002Fi2.wp.com\u002Feasyontheweb.com\u002Fwp-content\u002Fuploads\u002F2021\u002F01\u002Fcarbon-2021-01-13T195053.313.png?w=765&ssl=1"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Składnia useMutation jest nieco bardziej złożona w porównaniu do useQuery. Sam hook useMutation przyjmuje jako argumenty funkcję oraz obiekt konfiguracyjny (zauważ, że nie ma tutaj klucza)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Aby jednak wywołać metodę mutacji, należy użyć metody mutation.mutate z argumentem, który ma być przekazany do funkcji użytej wewnątrz useMutation."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Wszystkie stany, które były dostępne dla nas w useQuery jak error, isLoading, isSuccess etc są dostępne również dla mutacji."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Mutacje posiadają również metody callback, które mogą być użyte w obiekcie konfiguracyjnym dla hooka useMutation. Jedną z najczęściej używanych kombinacji jest ta z onSuccess i invalidateQueries."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    react-query pozwala nam na unieważnienie dowolnego lub wszystkich zapytań i ich zbuforowanych danych. Przyjrzyjmy się teraz bardzo powszechnemu scenariuszowi - dodajemy nowy rekord do bazy danych za pomocą hooka useMutation, w prawie 95% przypadków to co chcielibyśmy następnie zrobić, to pobrać wszystkie rekordy ponownie, tak aby nowy zaktualizowany rekord został wyświetlony. Aby to zrobić, możemy użyć funkcjonalności invalidateQueries."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Kiedy unieważniamy jakieś zapytanie, pomyśl o tym, że usuwamy zbuforowane dane dla tego zapytania i ponownie pobieramy dane dla tego zapytania i przechowujemy je w globalnym cache'u.\n"},{type:b,tag:x,props:{alt:"Oficjalny przykład useMutation z invalidateQueries",src:"https:\u002F\u002Fi2.wp.com\u002Feasyontheweb.com\u002Fwp-content\u002Fuploads\u002F2021\u002F01\u002Fcarbon-2021-01-13T200033.095.png?resize=768%2C305&ssl=1"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"    Zauważ, że w tym przykładzie unieważniamy dane dla dwóch konkretnych zapytań - todos i reminders, a zatem react-query automatycznie uruchomi hook useQuery dla tych dwóch zapytań i ponownie pobierze i ustawi nowe dane."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"autor "},{type:b,tag:e,props:{href:"https:\u002F\u002Feasyontheweb.com\u002Fabout-sahil-thakur\u002F",rel:[g,h,i],target:j},children:[{type:a,value:"Sahil Thakur"}]}]}]},dir:v,path:"\u002Fblog\u002F4-react-query",extension:w,createdAt:E,updatedAt:"2021-04-28T10:32:00.075Z"},{slug:"my-first-post",title:"Using semantic-release",date:"2021-03-12T20:47:18.000Z",toc:[{id:T,depth:l,text:U},{id:V,depth:l,text:W},{id:X,depth:l,text:Y},{id:Z,depth:l,text:_},{id:$,depth:l,text:aa}],body:{type:u,children:[{type:b,tag:m,props:{id:T},children:[{type:b,tag:e,props:{href:"#semantic-release-on-github",ariaHidden:n,tabIndex:o},children:[{type:b,tag:p,props:{className:[q,r]},children:[]}]},{type:b,tag:e,props:{href:"https:\u002F\u002Fgithub.com\u002Fsemantic-release\u002Fsemantic-release#-semantic-release",rel:[g,h,i],target:j},children:[{type:a,value:U}]}]},{type:a,value:c},{type:b,tag:m,props:{id:V},children:[{type:b,tag:e,props:{href:"#highlights",ariaHidden:n,tabIndex:o},children:[{type:b,tag:p,props:{className:[q,r]},children:[]}]},{type:a,value:W}]},{type:a,value:c},{type:b,tag:t,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Fully automated release"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:m,props:{id:X},children:[{type:b,tag:e,props:{href:"#how-it-work",ariaHidden:n,tabIndex:o},children:[{type:b,tag:p,props:{className:[q,r]},children:[]}]},{type:a,value:Y}]},{type:a,value:c},{type:b,tag:t,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"it uses "},{type:b,tag:e,props:{href:ab,rel:[g,h,i],target:j},children:[{type:a,value:ac}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"tools such as commitizen or "},{type:b,tag:e,props:{href:"https:\u002F\u002Fgithub.com\u002Fcommitizen\u002Fcz-cli#using-the-command-line-tool",rel:[g,h,i],target:j},children:[{type:a,value:"commitlint"}]},{type:a,value:" can be used to force contributors to write according to the styleguide"}]},{type:a,value:c},{type:b,tag:m,props:{id:Z},children:[{type:b,tag:e,props:{href:"#requirements",ariaHidden:n,tabIndex:o},children:[{type:b,tag:p,props:{className:[q,r]},children:[]}]},{type:a,value:_}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"In order to use "},{type:b,tag:"strong",props:{},children:[{type:a,value:"semantic-release"}]},{type:a,value:" you need:"}]},{type:a,value:c},{type:b,tag:t,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"To host your code in a "},{type:b,tag:e,props:{href:"https:\u002F\u002Fgit-scm.com",rel:[g,h,i],target:j},children:[{type:a,value:"Git repository"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Use a Continuous Integration service that allows you to "},{type:b,tag:e,props:{href:"docs\u002Fusage\u002Fci-configuration.md#authentication"},children:[{type:a,value:"securely set up credentials"}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Git CLI version "},{type:b,tag:e,props:{href:"docs\u002Fsupport\u002FFAQ.md#why-does-semantic-release-require-git-version--271"},children:[{type:a,value:"2.7.1 or higher"}]},{type:a,value:ad}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fnodejs.org",rel:[g,h,i],target:j},children:[{type:a,value:"Node.js"}]},{type:a,value:" version "},{type:b,tag:e,props:{href:"docs\u002Fsupport\u002FFAQ.md#why-does-semantic-release-require-node-version--1018"},children:[{type:a,value:"10.18 or higher"}]},{type:a,value:ad}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:m,props:{id:$},children:[{type:b,tag:e,props:{href:"#conclusion",ariaHidden:n,tabIndex:o},children:[{type:b,tag:p,props:{className:[q,r]},children:[]}]},{type:a,value:aa}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Tool is great for open source project, published on npm. Too much setup for small, private project."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:"em",props:{},children:[{type:a,value:"CheatSheet for "},{type:b,tag:e,props:{href:ab,rel:[g,h,i],target:j},children:[{type:a,value:ac}]}]}]},{type:a,value:c},{type:b,tag:z,props:{className:[A]},children:[{type:b,tag:B,props:{className:[C,D]},children:[{type:b,tag:y,props:{},children:[{type:a,value:"The `\u003Ctype\u003E` and `\u003Csummary\u003E` fields are mandatory, the `(\u003Cscope\u003E)` field is optional.\n\n\n##### Type\n\nMust be one of the following:\n\n* **build**: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)\n* **ci**: Changes to our CI configuration files and scripts (example scopes: Circle, BrowserStack, SauceLabs)\n* **docs**: Documentation only changes\n* **feat**: A new feature\n* **fix**: A bug fix\n* **perf**: A code change that improves performance\n* **refactor**: A code change that neither fixes a bug nor adds a feature\n* **test**: Adding missing tests or correcting existing tests\n\n"}]}]}]}]},dir:v,path:"\u002Fblog\u002Fmy-first-post",extension:w,createdAt:E,updatedAt:"2021-03-13T20:34:58.113Z"},{slug:"my-third-post",title:"Typescripts features to check",date:"2020-05-24T21:50:21.000Z",toc:[],body:{type:u,children:[{type:b,tag:d,props:{},children:[{type:a,value:"Parameters "},{type:b,tag:y,props:{},children:[{type:a,value:"\u003Ctype\u003E"}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"How this is working?"}]},{type:a,value:c},{type:b,tag:z,props:{className:[A]},children:[{type:b,tag:B,props:{className:[C,D]},children:[{type:b,tag:y,props:{},children:[{type:a,value:"import {MikroORM} from \"@mikro-orm\u002Fcore\"\nexport default  {\n    entities: [Post],\n    dbName: 'versatile',\n    type : 'postgresql',\n    debug: !PROD,\n    user: 'postgres',\n    password: 'postgres'\n} as Parameters\u003Ctypeof MikroORM.init\u003E[0];\n"}]}]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:e,props:{href:"https:\u002F\u002Fwww.typescriptlang.org\u002Fdocs\u002Fhandbook\u002Futility-types.html#parameterstype",rel:[g,h,i],target:j},children:[{type:a,value:"typescript docs"}]}]}]},dir:v,path:"\u002Fblog\u002Fmy-third-post",extension:w,createdAt:E,updatedAt:"2021-03-14T12:29:13.895Z"}]}],fetch:{},mutations:void 0}}("text","element","\n","p","a","li","nofollow","noopener","noreferrer","_blank","td",3,"h3","true",-1,"span","icon","icon-link","tr","ul","root","\u002Fblog",".md","img","code","div","nuxt-content-highlight","pre","language-text","line-numbers","2021-03-13T16:57:27.550Z","programs","Programs:","2021-03-21T13:04:33.652Z","th","zalety-używania-react-query","Zalety używania react-query","mniej-kodu","Mniej kodu","dane-w-pamięci-podręcznej","Dane w pamięci podręcznej","paginowane-zapytania","Paginowane zapytania","mutacje","Mutacje","semantic-release-on-github","semantic-release on Github","highlights","Highlights","how-it-work","How it work","requirements","Requirements","conclusion","Conclusion","https:\u002F\u002Fgithub.com\u002Fangular\u002Fangular\u002Fblob\u002Fmaster\u002FCONTRIBUTING.md#-commit-message-format","Angular Commit Message Conventions"," installed in your Continuous Integration environment")));